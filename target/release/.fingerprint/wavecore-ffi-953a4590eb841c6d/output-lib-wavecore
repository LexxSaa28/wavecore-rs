{"$message_type":"diagnostic","message":"unused variable: `height`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":5311,"byte_end":5317,"line_start":198,"line_end":198,"column_start":62,"column_end":68,"is_primary":true,"text":[{"text":"pub extern \"C\" fn wavecore_create_cylinder_mesh(radius: f64, height: f64, theta_res: u32, z_res: u32) -> *mut CMesh {","highlight_start":62,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":5311,"byte_end":5317,"line_start":198,"line_end":198,"column_start":62,"column_end":68,"is_primary":true,"text":[{"text":"pub extern \"C\" fn wavecore_create_cylinder_mesh(radius: f64, height: f64, theta_res: u32, z_res: u32) -> *mut CMesh {","highlight_start":62,"highlight_end":68}],"label":null,"suggested_replacement":"_height","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `height`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:198:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m: f64, height: f64, theta_res: u32, z_res: u32) -> *mut CMesh {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_height`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `z_res`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":5994,"byte_end":5999,"line_start":216,"line_end":216,"column_start":106,"column_end":111,"is_primary":true,"text":[{"text":"pub extern \"C\" fn wavecore_create_box_mesh(length: f64, width: f64, height: f64, x_res: u32, y_res: u32, z_res: u32) -> *mut CMesh {","highlight_start":106,"highlight_end":111}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":5994,"byte_end":5999,"line_start":216,"line_end":216,"column_start":106,"column_end":111,"is_primary":true,"text":[{"text":"pub extern \"C\" fn wavecore_create_box_mesh(length: f64, width: f64, height: f64, x_res: u32, y_res: u32, z_res: u32) -> *mut CMesh {","highlight_start":106,"highlight_end":111}],"label":null,"suggested_replacement":"_z_res","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `z_res`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:216:106\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0ms: u32, z_res: u32) -> *mut CMesh {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_z_res`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `rust_mesh`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":7263,"byte_end":7272,"line_start":257,"line_end":257,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let rust_mesh = match create_test_mesh() {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":7263,"byte_end":7272,"line_start":257,"line_end":257,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let rust_mesh = match create_test_mesh() {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"_rust_mesh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `rust_mesh`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:257:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let rust_mesh = match create_test_mesh() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_rust_mesh`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `solver`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":7556,"byte_end":7562,"line_start":268,"line_end":268,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let solver = BEMSolver::new(SolverEngine::Standard);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":7556,"byte_end":7562,"line_start":268,"line_end":268,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let solver = BEMSolver::new(SolverEngine::Standard);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"_solver","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:268:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let solver = BEMSolver::new(SolverEngine::Standard);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_solver`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `problem`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":7640,"byte_end":7647,"line_start":271,"line_end":271,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let problem = ProblemType::Radiation {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":7640,"byte_end":7647,"line_start":271,"line_end":271,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let problem = ProblemType::Radiation {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_problem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `problem`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:271:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let problem = ProblemType::Radiation {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_problem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `solver`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":9468,"byte_end":9474,"line_start":321,"line_end":321,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let solver = BEMSolver::new(SolverEngine::Standard);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":9468,"byte_end":9474,"line_start":321,"line_end":321,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let solver = BEMSolver::new(SolverEngine::Standard);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"_solver","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:321:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let solver = BEMSolver::new(SolverEngine::Standard);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_solver`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `problem`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":9525,"byte_end":9532,"line_start":322,"line_end":322,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let problem = ProblemType::Diffraction {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":9525,"byte_end":9532,"line_start":322,"line_end":322,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let problem = ProblemType::Diffraction {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_problem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `problem`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:322:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let problem = ProblemType::Diffraction {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_problem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `freq_slice`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":10967,"byte_end":10977,"line_start":367,"line_end":367,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let freq_slice = unsafe { std::slice::from_raw_parts(frequencies, num_freq as usize) };","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":10967,"byte_end":10977,"line_start":367,"line_end":367,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let freq_slice = unsafe { std::slice::from_raw_parts(frequencies, num_freq as usize) };","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"_freq_slice","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `freq_slice`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:367:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let freq_slice = unsafe { std::slice::from_raw_parts(frequencies, num_freq as usize) };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_freq_slice`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `dir_slice`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":11059,"byte_end":11068,"line_start":368,"line_end":368,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let dir_slice = unsafe { std::slice::from_raw_parts(directions, num_dir as usize) };","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":11059,"byte_end":11068,"line_start":368,"line_end":368,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let dir_slice = unsafe { std::slice::from_raw_parts(directions, num_dir as usize) };","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"_dir_slice","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dir_slice`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:368:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let dir_slice = unsafe { std::slice::from_raw_parts(directions, num_dir as usize) };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dir_slice`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `config`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":13898,"byte_end":13904,"line_start":475,"line_end":475,"column_start":46,"column_end":52,"is_primary":true,"text":[{"text":"pub extern \"C\" fn wavecore_set_solver_config(config: *const SolverConfig) {","highlight_start":46,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"ffi\\src\\lib.rs","byte_start":13898,"byte_end":13904,"line_start":475,"line_end":475,"column_start":46,"column_end":52,"is_primary":true,"text":[{"text":"pub extern \"C\" fn wavecore_set_solver_config(config: *const SolverConfig) {","highlight_start":46,"highlight_end":52}],"label":null,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `config`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mffi\\src\\lib.rs:475:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m475\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub extern \"C\" fn wavecore_set_solver_config(config: *const SolverConfig) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_config`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"10 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 10 warnings emitted\u001b[0m\n\n"}
